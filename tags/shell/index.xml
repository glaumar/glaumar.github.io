<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>shell on Glaumar's Blog</title><link>https://geekgo.tech/tags/shell/</link><description>Recent content in shell on Glaumar's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>©2021 glaumar.</copyright><lastBuildDate>Sun, 29 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://geekgo.tech/tags/shell/index.xml" rel="self" type="application/rss+xml"/><item><title>TOML</title><link>https://geekgo.tech/posts/toml/</link><pubDate>Mon, 24 May 2021 00:02:03 +0800</pubDate><guid>https://geekgo.tech/posts/toml/</guid><description>&lt;ul>
&lt;li>&lt;a href="#%e5%9f%ba%e6%9c%ac%e8%af%ad%e6%b3%95">基本语法&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e9%94%ae%e5%80%bc%e5%af%b9">键值对&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e5%b8%83%e5%b0%94%e5%80%bc">布尔值&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e6%95%b4%e6%95%b0">整数&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e6%b5%ae%e7%82%b9%e6%95%b0">浮点数&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e6%97%b6%e9%97%b4">时间&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e5%ad%97%e7%ac%a6%e4%b8%b2">字符串&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e6%95%b0%e7%bb%84">数组&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e8%a1%a8">表&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e8%a1%a8%e6%95%b0%e7%bb%84">表数组&lt;/a>
&lt;/li>
&lt;/ul>
&lt;p>“TOML”是“Tom&amp;rsquo;s Obvious, Minimal Language“的缩写，文件扩展名为&lt;code>.toml&lt;/code>, MIME类型为&lt;code>application/toml&lt;/code>。&lt;a href="http://toml-online-parser.ovonick.com/"target="_blank" rel="noopener noreferrer">TOML在线测试&lt;/a>
&lt;/p>
&lt;h1 id="基本语法">基本语法&lt;/h1>
&lt;ul>
&lt;li>大小写敏感&lt;/li>
&lt;li>必须使用 UTF-8 编码&lt;/li>
&lt;li>空白可以是制表符（0x09）或空格（0x20）&lt;/li>
&lt;li>换行可以是 LF（0x0A）或 CRLF（0x0D0A）&lt;/li>
&lt;li>注释使用&lt;code>#&lt;/code>&lt;/li>
&lt;/ul>
&lt;h1 id="键值对">键值对&lt;/h1>
&lt;ul>
&lt;li>每行一个键值对（有例外，值可以跨多行）&lt;/li>
&lt;li>键名可以是裸露的，引号引起来的，或点分隔的&lt;/li>
&lt;li>裸键只能包含 &lt;code>A-Za-z0-9_-&lt;/code>&lt;/li>
&lt;li>裸键和引号键等价，不可重名&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="nx">bare_key&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>
&lt;span class="mi">1234&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span> &lt;span class="c">#等价于 &amp;#34;1234&amp;#34; = &amp;#34;value&amp;#34;&lt;/span>
&lt;span class="s2">&amp;#34;127.0.0.1&amp;#34;&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>
&lt;span class="s2">&amp;#34;character encoding&amp;#34;&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>
&lt;span class="s2">&amp;#34;ʎǝʞ&amp;#34;&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>
&lt;span class="s1">&amp;#39;key2&amp;#39;&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>
&lt;span class="s1">&amp;#39;quoted &amp;#34;value&amp;#34;&amp;#39;&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Orange&amp;#34;&lt;/span>
&lt;span class="nx">physical&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">color&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;orange&amp;#34;&lt;/span>
&lt;span class="nx">physical&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">shape&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;round&amp;#34;&lt;/span>
&lt;span class="nx">site&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="s2">&amp;#34;google.com&amp;#34;&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="布尔值">布尔值&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="nx">bool1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="nx">bool2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="整数">整数&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="nx">int1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">+99&lt;/span>
&lt;span class="nx">int2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">42&lt;/span>
&lt;span class="nx">int3&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="nx">int4&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">-17&lt;/span>
&lt;span class="c">#可以用下划线增加可读性&lt;/span>
&lt;span class="nx">int5&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1_000&lt;/span>
&lt;span class="nx">int6&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">5_349_221&lt;/span>
&lt;span class="c"># 带有 `0x` 前缀的十六进制&lt;/span>
&lt;span class="nx">hex1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="nx">xDEADBEEF&lt;/span>
&lt;span class="nx">hex2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="nx">xdeadbeef&lt;/span>
&lt;span class="nx">hex3&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="nx">xdead_beef&lt;/span>
&lt;span class="c"># 带有 `0o` 前缀的八进制&lt;/span>
&lt;span class="nx">oct1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="nx">o01234567&lt;/span>
&lt;span class="nx">oct2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="nx">o755&lt;/span> &lt;span class="c"># 对于表示 Unix 文件权限很有用&lt;/span>
&lt;span class="c"># 带有 `0b` 前缀的二进制&lt;/span>
&lt;span class="nx">bin1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="nx">b11010110&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="浮点数">浮点数&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="c"># 小数&lt;/span>
&lt;span class="nx">flt1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mf">+1.0&lt;/span>
&lt;span class="nx">flt2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mf">3.1415&lt;/span>
&lt;span class="nx">flt3&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mf">-0.01&lt;/span>
&lt;span class="c"># 指数&lt;/span>
&lt;span class="nx">flt4&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="mi">+22&lt;/span>
&lt;span class="nx">flt5&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="nx">e06&lt;/span>
&lt;span class="nx">flt6&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">-2&lt;/span>&lt;span class="nx">E&lt;/span>&lt;span class="mi">-2&lt;/span>
&lt;span class="c"># 都有&lt;/span>
&lt;span class="nx">flt7&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mf">6.626&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="mi">-34&lt;/span>
&lt;span class="c"># 无穷&lt;/span>
&lt;span class="nx">sf1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">inf&lt;/span> &lt;span class="c"># 正无穷&lt;/span>
&lt;span class="nx">sf2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="err">+&lt;/span>&lt;span class="nx">inf&lt;/span> &lt;span class="c"># 正无穷&lt;/span>
&lt;span class="nx">sf3&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="err">-&lt;/span>&lt;span class="nx">inf&lt;/span> &lt;span class="c"># 负无穷&lt;/span>
&lt;span class="c"># 非数&lt;/span>
&lt;span class="nx">sf4&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">nan&lt;/span> &lt;span class="c"># 实际上对应信号非数码还是静默非数码，取决于实现&lt;/span>
&lt;span class="nx">sf5&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="err">+&lt;/span>&lt;span class="nx">nan&lt;/span> &lt;span class="c"># 等同于 `nan`&lt;/span>
&lt;span class="nx">sf6&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="err">-&lt;/span>&lt;span class="nx">nan&lt;/span> &lt;span class="c"># 有效，实际码取决于实现&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="时间">时间&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="nx">odt1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="ld">1979-05-27T07:32:00Z&lt;/span>
&lt;span class="nx">odt2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="ld">1979-05-27T00:32:00-07:00&lt;/span>
&lt;span class="nx">odt3&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1979-05-27&lt;/span>&lt;span class="nx">T00&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mf">00.999999&lt;/span>&lt;span class="mi">-07&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mi">00&lt;/span>
&lt;span class="nx">odt4&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1979-05-27&lt;/span> &lt;span class="mi">07&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mi">00&lt;/span>&lt;span class="nx">Z&lt;/span>
&lt;span class="nx">ldt1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1979-05-27&lt;/span>&lt;span class="nx">T07&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mi">00&lt;/span>
&lt;span class="nx">ldt2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1979-05-27&lt;/span>&lt;span class="nx">T00&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mf">00.999999&lt;/span>
&lt;span class="nx">ld1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1979-05-27&lt;/span>
&lt;span class="nx">lt1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">07&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mi">00&lt;/span>
&lt;span class="nx">lt2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">00&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mf">00.999999&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="字符串">字符串&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="c">#任何 Unicode 字符都可以使用，除了那些必须转义的：引号，反斜杠，以及除制表符外的控制字符（U+0000 至 U+0008，U+000A 至 U+001F，U+007F）&lt;/span>
&lt;span class="nx">str&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;我是一个字符串。\&amp;#34;你可以把我引起来\&amp;#34;。姓名\tJos\u00E9\n位置\t旧金山。&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>#转义序列
\b - backspace (U+0008)
\t - tab (U+0009)
\n - linefeed (U+000A)
\f - form feed (U+000C)
\r - carriage return (U+000D)
\&amp;quot; - quote (U+0022)
\\ - backslash (U+005C)
\uXXXX - unicode (U+XXXX)
\UXXXXXXXX - unicode (U+XXXXXXXX)
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="c"># 多行字符串&lt;/span>
&lt;span class="nx">str1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;span class="s2">Roses are red
&lt;/span>&lt;span class="s2">Violets are blue&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="c"># 在 Unix 系统，上面的多行字符串可能等同于：&lt;/span>
&lt;span class="nx">str2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Roses are red\nViolets are blue&amp;#34;&lt;/span>
&lt;span class="c"># 在 Windows 系统，它可能等价于：&lt;/span>
&lt;span class="nx">str3&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Roses are red\r\nViolets are blue&amp;#34;&lt;/span>
&lt;span class="c"># 使用\避免多余的换行符&lt;/span>
&lt;span class="nx">str4&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;\
&lt;/span>&lt;span class="s2"> The quick brown \
&lt;/span>&lt;span class="s2"> fox jumps over \
&lt;/span>&lt;span class="s2"> the lazy dog.\
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="c"># 使用单引号不会转义，所见即所得。&lt;/span>
&lt;span class="nx">winpath&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;C:\Users\nodejs\templates&amp;#39;&lt;/span>
&lt;span class="nx">winpath2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;\\ServerX\admin$\system32\&amp;#39;
&lt;/span>&lt;span class="s1">quoted = &amp;#39;&lt;/span>&lt;span class="nx">Tom&lt;/span> &lt;span class="s2">&amp;#34;Dubs&amp;#34;&lt;/span> &lt;span class="nx">Preston&lt;/span>&lt;span class="err">-&lt;/span>&lt;span class="nx">Werner&lt;/span>&lt;span class="s1">&amp;#39;
&lt;/span>&lt;span class="s1">regex = &amp;#39;&lt;/span>&lt;span class="err">&amp;lt;\&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="err">*\&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="err">*&amp;gt;&lt;/span>&lt;span class="s1">&amp;#39;
&lt;/span>&lt;span class="s1">
&lt;/span>&lt;span class="s1"># 多行写法
&lt;/span>&lt;span class="s1">regex2 = &amp;#39;&amp;#39;&amp;#39;&lt;/span>&lt;span class="nx">I&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">dw&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="s1">&amp;#39;t need \d{2} apples&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;span class="nx">lines&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;
&lt;/span>&lt;span class="s1">原始字符串中的
&lt;/span>&lt;span class="s1">第一个换行被剔除了。
&lt;/span>&lt;span class="s1"> 所有其它空白
&lt;/span>&lt;span class="s1"> 都保留了。
&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="数组">数组&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="nx">integers&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="p">]&lt;/span>
&lt;span class="nx">colors&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;红&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;黄&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;绿&amp;#34;&lt;/span> &lt;span class="p">]&lt;/span>
&lt;span class="nx">nested_array_of_ints&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="p">],&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">]&lt;/span>
&lt;span class="nx">nested_mixed_array&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="p">],&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;b&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;c&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">]&lt;/span>
&lt;span class="nx">string_array&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;所有的&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;字符串&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;是相同的&amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;类型&amp;#39;&amp;#39;&amp;#39;&lt;/span> &lt;span class="p">]&lt;/span>
&lt;span class="c"># 允许混合类型的数组&lt;/span>
&lt;span class="nx">numbers&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="mf">0.1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="p">]&lt;/span>
&lt;span class="nx">contributors&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;Foo Bar &amp;lt;foo@example.com&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">{&lt;/span> &lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Baz Qux&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">email&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;bazqux@example.com&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">url&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;https://example.com/bazqux&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="c"># 可以跨行&lt;/span>
&lt;span class="nx">hosts&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;alpha&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;omega&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="表">表&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="c"># 属于根表的数据必须在文件开头&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Fido&amp;#34;&lt;/span>
&lt;span class="nx">breed&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;pug&amp;#34;&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">table&lt;/span>&lt;span class="mi">-1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">key1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;some string&amp;#34;&lt;/span>
&lt;span class="nx">key2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">123&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">table&lt;/span>&lt;span class="mi">-2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">key1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;another string&amp;#34;&lt;/span>
&lt;span class="nx">key2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">456&lt;/span>
&lt;span class="c"># 可以直接定义子孙表&lt;/span>
&lt;span class="c"># [x] 你&lt;/span>
&lt;span class="c"># [x.y] 不&lt;/span>
&lt;span class="c"># [x.y.z] 需要这些&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">z&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c"># 来让这生效&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c"># 后置父表定义是可以的&lt;/span>
&lt;span class="c"># 不能重复定义&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">fruit&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">apple&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">color&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;红&amp;#34;&lt;/span>
&lt;span class="nx">apple&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">taste&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sweet&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="c"># [fruit] # 非法&lt;/span>
&lt;span class="c"># [fruit.apple] # 非法&lt;/span>
&lt;span class="c"># [fruit.apple.taste] # 非法&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">fruit&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">apple&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">texture&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c"># 你可以添加子表&lt;/span>
&lt;span class="nx">smooth&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="c"># 内联形式的表&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">first&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Tom&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">last&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Preston-Werner&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">point&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">x&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">y&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="nx">animal&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">type&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;pug&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="表数组">表数组&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="p">[[&lt;/span>&lt;span class="nx">products&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Hammer&amp;#34;&lt;/span>
&lt;span class="nx">sku&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">738594937&lt;/span>
&lt;span class="p">[[&lt;/span>&lt;span class="nx">products&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="c"># 数组里的空表&lt;/span>
&lt;span class="p">[[&lt;/span>&lt;span class="nx">products&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Nail&amp;#34;&lt;/span>
&lt;span class="nx">sku&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">284758393&lt;/span>
&lt;span class="nx">color&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;gray&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="p">[[&lt;/span>&lt;span class="nx">fruits&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;apple&amp;#34;&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">fruits&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">physical&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c"># 子表&lt;/span>
&lt;span class="nx">color&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;red&amp;#34;&lt;/span>
&lt;span class="nx">shape&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;round&amp;#34;&lt;/span>
&lt;span class="p">[[&lt;/span>&lt;span class="nx">fruits&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">varieties&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="c"># 嵌套表数组&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;red delicious&amp;#34;&lt;/span>
&lt;span class="p">[[&lt;/span>&lt;span class="nx">fruits&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">varieties&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;granny smith&amp;#34;&lt;/span>
&lt;span class="p">[[&lt;/span>&lt;span class="nx">fruits&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;banana&amp;#34;&lt;/span>
&lt;span class="p">[[&lt;/span>&lt;span class="nx">fruits&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">varieties&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;plantain&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="c"># 内联形式的表数组&lt;/span>
&lt;span class="nx">points&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">x&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">y&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">z&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span> &lt;span class="nx">x&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">y&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">z&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">9&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span> &lt;span class="nx">x&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">y&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">z&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">8&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://toml.io/cn/v1.0.0"target="_blank" rel="noopener noreferrer">TOML官方文档&lt;/a>
&lt;/li>
&lt;/ul></description></item><item><title>YAML</title><link>https://geekgo.tech/posts/yaml/</link><pubDate>Sun, 23 May 2021 12:46:00 +0800</pubDate><guid>https://geekgo.tech/posts/yaml/</guid><description>&lt;ul>
&lt;li>&lt;a href="#%e5%9f%ba%e6%9c%ac%e8%af%ad%e6%b3%95">基本语法&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e5%af%b9%e8%b1%a1">对象&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e6%95%b0%e7%bb%84">数组&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e6%b7%b7%e5%90%88%e4%bd%bf%e7%94%a8">混合使用&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e5%9f%ba%e6%9c%ac%e7%b1%bb%e5%9e%8b">基本类型&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e5%bc%ba%e5%88%b6%e7%b1%bb%e5%9e%8b%e8%bd%ac%e6%8d%a2">强制类型转换&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e5%a4%9a%e8%a1%8c%e5%ad%97%e7%ac%a6%e4%b8%b2">多行字符串&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e5%bc%95%e7%94%a8">引用&lt;/a>
&lt;/li>
&lt;/ul>
&lt;p>YAML是“YAML Ain’t Markup Language”的递归缩写。扩展名可以是&lt;code>.yaml&lt;/code>或&lt;code>.yml&lt;/code>。&lt;a href="http://nodeca.github.io/js-yaml/"target="_blank" rel="noopener noreferrer">YAML在线测试&lt;/a>
&lt;/p>
&lt;h1 id="基本语法">基本语法&lt;/h1>
&lt;ul>
&lt;li>大小写敏感&lt;/li>
&lt;li>使用缩进表示层级关系&lt;/li>
&lt;li>缩进时不允许使用Tab键，只允许使用空格。&lt;/li>
&lt;li>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可&lt;/li>
&lt;li>注释使用&lt;code>#&lt;/code>&lt;/li>
&lt;/ul>
&lt;h1 id="对象">对象&lt;/h1>
&lt;p>对象是键值对的集合，”key: value“中冒号右边的空格是必须的&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">animal&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pets&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">hash&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{&lt;span class="w"> &lt;/span>&lt;span class="nt">name: Steve, foo&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">bar } &lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="数组">数组&lt;/h1>
&lt;p>“- value”中，减号右边的空格是必须的&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">- &lt;span class="l">Cat&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>- &lt;span class="l">Dog&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>- &lt;span class="l">Goldfish&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">-&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">Cat&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">Dog&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">Goldfish&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>-&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">Apple&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">Pear&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">Orange&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">- &lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Cat, Dog, Goldfish ]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>- &lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Apple, Pear, Orange ]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="混合使用">混合使用&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">animal&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Cat, Dog, Goldfish ], [ Apple, Pear, Orange ] ]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">companies&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">company1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">price&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">200W&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">company2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">price&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">500W&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">languages&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">Ruby&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">Perl&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">Python &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">websites&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">YAML&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">yaml.org &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">Ruby&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ruby-lang.org &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">Python&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">python.org &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">Perl&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">use.perl.org&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="基本类型">基本类型&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">boolean&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="kc">TRUE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#true,True都可以&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="kc">FALSE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#false，False都可以&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">float&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">canonical&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1.23015e+3&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">exponential&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">12.3015e+02&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">fixed&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1230.15&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">negative infinity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="l">.inf&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">not a number&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">.NaN&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">int&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">canonical&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">12345&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">decimal&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">+12345&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">octal&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0o14&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">hexadecimal&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">0xC&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">null&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">nullvalue&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">~ &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#使用~表示null&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">string&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">Hello world &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#字符串可以不使用引号&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;Hello world\n&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#含有特殊字符用双引号&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;Hello world\n&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#单引号会自动转义特殊字符，等价于其他语言中的&amp;#34;Hello world\\n&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;labor&amp;#39;&amp;#39;s day&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#使用单引号对单本身引号转义，等价于其他语言中的&amp;#39;labor\&amp;#39;s day&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;Sosa did fine.\u263A&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#使用Unicode&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">date&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="ld">2018-02-17&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#日期必须使用ISO 8601格式，即yyyy-MM-dd&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">datetime&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="ld">2018-02-17T15:02:31&lt;/span>&lt;span class="m">+08&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="m">00&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#时间使用ISO 8601格式，时间和日期之间使用T连接，最后使用+代表时区&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="强制类型转换">强制类型转换&lt;/h1>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">e&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">!!str&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">123&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">f&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">!!str&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="多行字符串">多行字符串&lt;/h1>
&lt;p>多行字符串第二行开始需要空格缩进，最终显示每行内容会使用空格隔开&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">str&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">这是一段&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">多行&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">字符串&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>等价于&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">str&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;这是一段 多行 字符串&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>|&lt;/code>保留换行符，&lt;code>&amp;gt;&lt;/code>折叠换行&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">this&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="sd">
&lt;/span>&lt;span class="sd"> one
&lt;/span>&lt;span class="sd"> two
&lt;/span>&lt;span class="sd"> three&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">that&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="sd">
&lt;/span>&lt;span class="sd"> one
&lt;/span>&lt;span class="sd"> two
&lt;/span>&lt;span class="sd"> three&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>等价于&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">this&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;one\ntwo\nthree\n&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">thate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;one two three\n&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>+&lt;/code>表示保留文字块末尾的换行，&lt;code>-&lt;/code>表示删除字符串末尾的换行。&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">s1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="sd">
&lt;/span>&lt;span class="sd"> &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Foo&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">s2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">|+&lt;/span>&lt;span class="sd">
&lt;/span>&lt;span class="sd"> &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Foo&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">s3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">|-&lt;/span>&lt;span class="sd">
&lt;/span>&lt;span class="sd"> &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Foo&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>等价于&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">s1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Foo\n&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">s2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Foo\n\n\n&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">s3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Foo&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="引用">引用&lt;/h1>
&lt;p>&lt;code>&amp;amp;&lt;/code>用来建立锚点，&lt;code>&amp;lt;&amp;lt;&lt;/code>表示合并到当前数据，&lt;code>*&lt;/code>用来引用锚点&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">defaults&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">&amp;amp;defaults&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">adapter&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">postgres&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">localhost&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">copy_defaults&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">*defaults&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">development&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">database&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">myapp_development&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;lt;&amp;lt;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">*defaults&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="cp">&amp;amp;showell&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Steve &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">Clark &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">Brian &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">Oren &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="cp">*showell&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>等价于&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">defaults&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">adapter&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">postgres&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">localhost&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">copy_defaults&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{&lt;span class="nt">adapter: postgres, host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">localhost}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">development&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">database&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">myapp_development&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">adapter&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">postgres&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">localhost&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">Steve &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">Clark &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">Brian &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">Oren &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">Steve &lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.ruanyifeng.com/blog/2016/07/yaml.html"target="_blank" rel="noopener noreferrer">阮一峰的网络日志-YAML语言教程&lt;/a>
&lt;/li>
&lt;li>&lt;a href="https://www.runoob.com/w3cnote/yaml-intro.html"target="_blank" rel="noopener noreferrer">菜鸟教程-YAML入门教程&lt;/a>
&lt;/li>
&lt;li>&lt;a href="https://yaml.org/spec/1.2/spec.html#id2759963"target="_blank" rel="noopener noreferrer">YAML Ain’t Markup Language (YAML™) Version 1.2&lt;/a>
&lt;/li>
&lt;/ul></description></item><item><title>Git</title><link>https://geekgo.tech/posts/git/</link><pubDate>Sat, 22 May 2021 20:42:40 +0800</pubDate><guid>https://geekgo.tech/posts/git/</guid><description>&lt;ul>
&lt;li>&lt;a href="#%e9%85%8d%e7%bd%aeconfig">配置（config）&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e5%85%8b%e9%9a%86clone">克隆（clone）&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e5%ad%90%e4%bb%93%e5%ba%93submodule">子仓库（submodule）&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e6%9a%82%e5%ad%98staged">暂存（staged）&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e6%8f%90%e4%ba%a4commit">提交（commit）&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e5%88%86%e6%94%afbranch">分支（branch）&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e8%b4%ae%e8%97%8fstash">贮藏（stash）&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e6%97%a5%e5%bf%97log">日志（log）&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e5%b8%ae%e5%8a%a9%e6%89%8b%e5%86%8chelp">帮助手册（help）&lt;/a>
&lt;/li>
&lt;li>&lt;a href="#%e6%9d%82%e9%a1%b9misc">杂项（Misc）&lt;/a>
&lt;/li>
&lt;/ul>
&lt;h1 id="配置config">配置（config）&lt;/h1>
&lt;p>显示当前配置&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git config -l
&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置全局用户名&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git config --global user.name &lt;span class="s2">&amp;#34;glaumar&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置全局邮件&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git config --global user.email &lt;span class="s2">&amp;#34;glaumar2018@outlook.com&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="克隆clone">克隆（clone）&lt;/h1>
&lt;p>克隆仓库到指定目录&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git clone remote_repocitory path/to/directory
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="子仓库submodule">子仓库（submodule）&lt;/h1>
&lt;p>添加子仓库&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git submodule add remote_repocitory path/to/directory
&lt;/code>&lt;/pre>&lt;/div>&lt;p>从远程仓库拉取所有子模块&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git submodule update --init --recursive
&lt;/code>&lt;/pre>&lt;/div>&lt;p>更新所有子模块&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git submodule update --recursive --remote
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="暂存staged">暂存（staged）&lt;/h1>
&lt;p>添加文件到暂存区&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git add filename
&lt;/code>&lt;/pre>&lt;/div>&lt;p>撤销暂存&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git restore --staged filename
&lt;/code>&lt;/pre>&lt;/div>&lt;p>丢弃对文件的修改&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git restore filename
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="提交commit">提交（commit）&lt;/h1>
&lt;p>覆盖上次提交&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git commit --amend
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="分支branch">分支（branch）&lt;/h1>
&lt;p>显示所有分支&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git branch
&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建新分支&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git branch branch_name
&lt;/code>&lt;/pre>&lt;/div>&lt;p>切换到另一个分支&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git checkout branch_name
&lt;span class="c1"># or&lt;/span>
git switch branch_name
&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建并切换到新分支&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git checkout -b branch_name
&lt;/code>&lt;/pre>&lt;/div>&lt;p>删除分支&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git branch -d branch_name
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="贮藏stash">贮藏（stash）&lt;/h1>
&lt;p>贮藏现场，获得一个干净的工作环境（会保存modified和staged数据，不会保存untracked文件）&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git stash
&lt;/code>&lt;/pre>&lt;/div>&lt;p>展示所有已贮藏现场&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git stash list
&lt;/code>&lt;/pre>&lt;/div>&lt;p>恢复最新贮藏的现场(恢复后删除对应stash)&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git stash pop
&lt;/code>&lt;/pre>&lt;/div>&lt;p>指定要恢复的现场(恢复后不会删除)&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git stash apply stash_name
&lt;/code>&lt;/pre>&lt;/div>&lt;p>删除所有贮藏&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git stash clear
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="日志log">日志（log）&lt;/h1>
&lt;p>显示前n条提交记录，n是数字&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git log -n
&lt;/code>&lt;/pre>&lt;/div>&lt;p>显示简要每次提交的简要变化&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git log --stat
&lt;/code>&lt;/pre>&lt;/div>&lt;p>显示显示简要每次提交的详细变化&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git log -p
&lt;/code>&lt;/pre>&lt;/div>&lt;p>显示分支变化情况&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git log --graph
&lt;/code>&lt;/pre>&lt;/div>&lt;p>每条记录之显示一行&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git log --oneline
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="帮助手册help">帮助手册（help）&lt;/h1>
&lt;p>常用命令简介&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git &lt;span class="nb">help&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>子命令帮助手册&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git &lt;span class="nb">help&lt;/span> child_command
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="杂项misc">杂项（Misc）&lt;/h1>
&lt;p>HTTPS的仓库连接要求输入用户名和密码，修改为SSH连接自动使用SSH私钥验证身份&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">git remote set-url origin git@github.com:&amp;lt;Username&amp;gt;/&amp;lt;Project&amp;gt;.git
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://git-scm.com/book/zh/v2"target="_blank" rel="noopener noreferrer">Pro Git 第二版&lt;/a>
&lt;/li>
&lt;/ul></description></item><item><title>About</title><link>https://geekgo.tech/about/</link><pubDate>Fri, 21 May 2021 19:45:05 +0800</pubDate><guid>https://geekgo.tech/about/</guid><description>&lt;h1 id="log">Log&lt;/h1>
&lt;blockquote>
&lt;p>2021-5-21 从jekyll迁移到hugo&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>2019-12-1 发布第一篇文章&lt;/p>
&lt;/blockquote></description></item><item><title>浮点数比较</title><link>https://geekgo.tech/posts/compare-float-values/</link><pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate><guid>https://geekgo.tech/posts/compare-float-values/</guid><description>&lt;p>计算机中的浮点数并不精确, 不能直接用 &lt;code>==&lt;/code> 比较两个浮点数是否相等, 应在可接受的范围定义一个比较小的数 &lt;code>epsilon&lt;/code> , 两个浮点数之差小于 &lt;code>epsilon&lt;/code> 即认为他们相等&lt;/p>
&lt;p>C&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;float.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;math.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdbool.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="kt">bool&lt;/span> &lt;span class="nf">almost_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">double&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">double&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">fabs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">DBL_EPSILON&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>C++&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;cmath&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;limits&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="kt">bool&lt;/span> &lt;span class="nf">almost_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">double&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">double&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">fabs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">numeric_limits&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="o">&amp;gt;::&lt;/span>&lt;span class="n">epsilon&lt;/span>&lt;span class="p">());&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Qt&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;QtGlobal&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="n">qFuzzyCompare&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Javascript/QML&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kd">function&lt;/span> &lt;span class="nx">almost_equal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">52&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>this_thread::sleep_for()和chrono::duration, ratio;</title><link>https://geekgo.tech/posts/sleep-for-and-chrono-duration/</link><pubDate>Fri, 14 Aug 2020 00:00:00 +0000</pubDate><guid>https://geekgo.tech/posts/sleep-for-and-chrono-duration/</guid><description>&lt;p>想着找个跨平台的 &lt;code>sleep()&lt;/code> , 看到了标准库里的 &lt;code>sleep_for()&lt;/code> , 用起来不难, 但涉及到一些没见过的类&lt;/p>
&lt;h2 id="tldr">TL;DR&lt;/h2>
&lt;p>C++11&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">this_thread&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">sleep_for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">chrono&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">milliseconds&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">500&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">this_thread&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">sleep_for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">chrono&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">seconds&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">));&lt;/span>
&lt;span class="n">this_thread&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">sleep_for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">chrono&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">minutes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>C++14&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">chrono_literals&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">this_thread&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">sleep_for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">500&lt;/span>&lt;span class="n">ms&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">this_thread&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">sleep_for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="n">this_thread&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">sleep_for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="n">min&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="stdthis_threadsleep_for">std::this_thread::sleep_for&lt;/h2>
&lt;p>&lt;strong>header&lt;/strong>: &amp;lt;thread&amp;gt;&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="k">template&lt;/span>&lt;span class="o">&amp;lt;&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="nc">Rep&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="nc">Period&lt;/span> &lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="kt">void&lt;/span> &lt;span class="n">sleep_for&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">chrono&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">duration&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Rep&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Period&lt;/span>&lt;span class="o">&amp;gt;&amp;amp;&lt;/span> &lt;span class="n">sleep_duration&lt;/span> &lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>阻塞当前线程至少一个 &lt;code>sleep_duration&lt;/code> (可能会由于调度或者资源竞争产生延迟)&lt;/p>
&lt;p>显然我们需要构造一个 &lt;code>duration&lt;/code> 对象来表示要阻塞的时间&lt;/p>
&lt;h2 id="stdchronoduration">std::chrono::duration&lt;/h2>
&lt;p>&lt;strong>header&lt;/strong>: &amp;lt;chrono&amp;gt;&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="k">template&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Rep&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Period&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">ratio&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="nc">duration&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>Rep&lt;/code> 是一个数值类型, 如: &lt;code>int&lt;/code> , &lt;code>double&lt;/code>&lt;/p>
&lt;p>&lt;code>Period&lt;/code> 表示时间周期, 单位是秒, 默认是1秒 ( &lt;code>std::ratio&lt;/code> 类用来表示一个有理数, 将在后面讲解)&lt;/p>
&lt;p>一个 &lt;code>duration&lt;/code> 对象内唯一的数据是一个 &lt;code>Rep&lt;/code> 类型的数, 用来表示时间&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">chrono&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">duration&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">tow_sec&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 一个表示2秒的duration对象
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">chrono&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">duration&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">ratio&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">60&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">half_min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 一个表示半分钟的duration对象
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">chrono&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">duration&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">ratio&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">five_hundred_milli&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">500&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 一个表示500毫秒的duration对象
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>C++11中预先定义好的常用类型&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Type&lt;/th>
&lt;th>Definition&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>std::chrono::nanoseconds&lt;/code>&lt;/td>
&lt;td>&lt;code>duration&amp;lt;/*signed integer type of at least 64 bits*/, std::nano&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>std::chrono::microseconds&lt;/code>&lt;/td>
&lt;td>&lt;code>duration&amp;lt;/*signed integer type of at least 55 bits*/, std::micro&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>std::chrono::milliseconds&lt;/code>&lt;/td>
&lt;td>&lt;code>duration&amp;lt;/*signed integer type of at least 45 bits*/, std::milli&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>std::chrono::seconds&lt;/code>&lt;/td>
&lt;td>&lt;code>duration&amp;lt;/*signed integer type of at least 35 bits*/&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>std::chrono::minutes&lt;/code>&lt;/td>
&lt;td>&lt;code>duration&amp;lt;/*signed integer type of at least 29 bits*/, std::ratio&amp;lt;60&amp;gt;&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>std::chrono::hours&lt;/code>&lt;/td>
&lt;td>&lt;code>duration&amp;lt;/*signed integer type of at least 23 bits*/, std::ratio&amp;lt;3600&amp;gt;&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="c14">C++14&lt;/h3>
&lt;p>C++14在标准库里添加了几个函数, 使得 &lt;code>duration&lt;/code> 的使用变得相当友好, 就像博客开头那样&lt;/p>
&lt;p>Defined in inline namespace &lt;code>std::literals::chrono_literals&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Function&lt;/th>
&lt;th>Introduction&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://en.cppreference.com/w/cpp/chrono/operator%22%22h"target="_blank" rel="noopener noreferrer"> operator&amp;quot;&amp;ldquo;h&lt;/a>
(C++14)&lt;/td>
&lt;td>A &lt;strong>std::chrono::duration&lt;/strong> literal representing hours (function)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.cppreference.com/w/cpp/chrono/operator%22%22min"target="_blank" rel="noopener noreferrer"> operator&amp;quot;&amp;ldquo;min&lt;/a>
(C++14)&lt;/td>
&lt;td>A &lt;strong>std::chrono::duration&lt;/strong> literal representing minutes (function)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.cppreference.com/w/cpp/chrono/operator%22%22s"target="_blank" rel="noopener noreferrer"> operator&amp;quot;&amp;ldquo;s&lt;/a>
(C++14)&lt;/td>
&lt;td>A &lt;strong>std::chrono::duration&lt;/strong> literal representing seconds (function)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.cppreference.com/w/cpp/chrono/operator%22%22ms"target="_blank" rel="noopener noreferrer"> operator&amp;quot;&amp;ldquo;ms&lt;/a>
(C++14)&lt;/td>
&lt;td>A &lt;strong>std::chrono::duration&lt;/strong> literal representing milliseconds (function)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.cppreference.com/w/cpp/chrono/operator%22%22us"target="_blank" rel="noopener noreferrer"> operator&amp;quot;&amp;ldquo;us&lt;/a>
(C++14)&lt;/td>
&lt;td>A &lt;strong>std::chrono::duration&lt;/strong> literal representing microseconds (function)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://en.cppreference.com/w/cpp/chrono/operator%22%22ns"target="_blank" rel="noopener noreferrer"> operator&amp;quot;&amp;ldquo;ns&lt;/a>
(C++14)&lt;/td>
&lt;td>A &lt;strong>std::chrono::duration&lt;/strong> literal representing nanoseconds (function)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="stdratio">std::ratio&lt;/h2>
&lt;p>&lt;strong>header&lt;/strong>: &amp;lt;ratio&amp;gt;&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="k">template&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">intmax_t&lt;/span> &lt;span class="n">Num&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">intmax_t&lt;/span> &lt;span class="n">Denom&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="nc">ratio&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>ratio&lt;/code> 以分数的形式来保存有理数, &lt;code>Num&lt;/code> 表示分子, &lt;code>Denom&lt;/code> 表示分母, 分母默认为1&lt;/p>
&lt;p>&lt;code>ration&lt;/code> 定义了两个静态数据成员 &lt;code>num&lt;/code> 和 &lt;code>den&lt;/code> 来保存分子和分母, 可以通过 &lt;code>对象名::num&lt;/code> 和 &lt;code>对象名::den&lt;/code> 直接获取相应数据&lt;/p>
&lt;p>从模板声明可以看出来, 不同有理数的类型并不一样, 直接重载算术运算符没有什么意义, 要对有理数进行运算需要用 &lt;code>&amp;lt;ratio&amp;gt;&lt;/code> 头文件里定义的类&lt;/p>
&lt;p>下面是c++官方文档给出的将两个有理数相加的 Example:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;ratio&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="k">typedef&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">ratio&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">two_third&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">typedef&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">ratio&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">one_sixth&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">typedef&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">ratio_add&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">two_third&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">one_sixth&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">sum&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;2/3 + 1/6 = &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">sum&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">num&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="sc">&amp;#39;/&amp;#39;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">sum&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">den&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="sc">&amp;#39;\n&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>output:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="mi">2&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">3&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">6&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">6&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://en.cppreference.com/w/"target="_blank" rel="noopener noreferrer">C++官方文档&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.cnblogs.com/jwk000/p/3560086.html"target="_blank" rel="noopener noreferrer">博客园 - C++11 std::chrono库详解&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>QML实现图片圆角</title><link>https://geekgo.tech/posts/image-rounded-corners-in-qml/</link><pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate><guid>https://geekgo.tech/posts/image-rounded-corners-in-qml/</guid><description>&lt;p>QML中的 &lt;code>Image&lt;/code> 类型没有 &lt;code>radius&lt;/code> 属性，不像 &lt;code>Rectangle&lt;/code> 可以自定义圆角，借助 &lt;code>OpacityMask&lt;/code> （需要导入 &lt;code>QtGraphicalEffects&lt;/code> ）把他们结合到一起即可实现图片圆角&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">import&lt;/span> &lt;span class="nx">QtQuick&lt;/span> &lt;span class="mf">2.15&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">QtQuick&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Controls&lt;/span> &lt;span class="mf">2.15&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">QtGraphicalEffects&lt;/span> &lt;span class="mf">1.15&lt;/span>
&lt;span class="nx">ApplicationWindow&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nb">window&lt;/span>
&lt;span class="nx">visible&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="nx">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">640&lt;/span>
&lt;span class="nx">height&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">480&lt;/span>
&lt;span class="nx">title&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;rouned image&amp;#34;&lt;/span>
&lt;span class="nx">Image&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">img&lt;/span>
&lt;span class="nx">anchors&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">centerIn&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">parent&lt;/span>
&lt;span class="nx">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">200&lt;/span>
&lt;span class="nx">height&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">200&lt;/span>
&lt;span class="nx">source&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;qrc:/avatar.png&amp;#34;&lt;/span>
&lt;span class="nx">layer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">enabled&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;span class="nx">layer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">effect&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">OpacityMask&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">maskSource&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Rectangle&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">img&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">width&lt;/span>
&lt;span class="nx">height&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">img&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">height&lt;/span>
&lt;span class="nx">radius&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">50&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>效果：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/glaumar/pictures/master/blog/Image-rounded-corners-in-QML-1.png"
alt/>&lt;/p>
&lt;hr>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://stackoverflow.com/questions/6090740/image-rounded-corners-in-qml"target="_blank" rel="noopener noreferrer">stack overflow - Image rounded corners in QML&lt;/a>
&lt;/li>
&lt;/ul></description></item><item><title>Div+CSS实现文本居中左对齐</title><link>https://geekgo.tech/posts/center-block-but-align-contents-to-the-left/</link><pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate><guid>https://geekgo.tech/posts/center-block-but-align-contents-to-the-left/</guid><description>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-align: center;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;display: inline-block; text-align: left;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">b&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>学院：&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">b&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">u&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>信息科学与工程&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">u&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">b&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>专业：&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">b&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">u&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>软件工程&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">u&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">b&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>班级：&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">b&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">u&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>软件-3班&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">u&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">b&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>姓名：&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">b&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">u&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>张三&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">u&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>效果：&lt;/p>
&lt;div style="text-align: center;">
&lt;div style="display: inline-block; text-align: left;">
&lt;p>&lt;b>学院：&lt;/b>&lt;u>信息科学与工程&lt;/u>&lt;/p>
&lt;p>&lt;b>专业：&lt;/b>&lt;u>软件工程&lt;/u>&lt;/p>
&lt;p>&lt;b>班级：&lt;/b>&lt;u>软件-3班&lt;/u>&lt;/p>
&lt;p>&lt;b>姓名：&lt;/b>&lt;u>张三&lt;/u>&lt;/p>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://stackoverflow.com/questions/1269589/css-center-block-but-align-contents-to-the-left"target="_blank" rel="noopener noreferrer">stack overflow - CSS: Center block, but align contents to the left&lt;/a>
&lt;/li>
&lt;/ul></description></item><item><title>使用STL生成随机数</title><link>https://geekgo.tech/posts/generate-random-number-using-stl/</link><pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate><guid>https://geekgo.tech/posts/generate-random-number-using-stl/</guid><description>&lt;h2 id="随机数种子">随机数种子&lt;/h2>
&lt;p>使用随机数引擎生成（伪）随机数前，我们通常需要传入一个种子以确保程序每次运行能生成不同的随机数&lt;/p>
&lt;p>&lt;code>random_device&lt;/code> 类可以使用系统提供的数据源，并返回一个&lt;strong>真随机数&lt;/strong>（根据实现，如果数据源不可用也可能生成伪随机数），取值范围是[std::random_device::min() , std::random_device::max()]&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;random&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;Max: &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">random_device&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">max&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;Min: &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">random_device&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">min&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">random_device&lt;/span> &lt;span class="n">rd&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">rd&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>输出：&lt;/p>
&lt;pre>&lt;code>Max: 4294967295
Min: 0
2767121154
1691292331
801934702
482676768
4189593090
213760575
301031565
973228337
&lt;/code>&lt;/pre>&lt;h3 id="为什么不直接使用random_device生成的随机数">为什么不直接使用random_device生成的随机数&lt;/h3>
&lt;p>生成一个真随机数会急剧消耗系统采集的熵，采集速度远远不及实际的使用速度，熵小了，生成的数就不那么随机了&lt;/p>
&lt;h2 id="随机数引擎">随机数引擎&lt;/h2>
&lt;p>使用默认随机数引擎&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;random&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;Max: &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">default_random_engine&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">max&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;Min: &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">default_random_engine&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">min&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">random_device&lt;/span> &lt;span class="n">rd&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">default_random_engine&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rd&lt;/span>&lt;span class="p">());&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>输出：&lt;/p>
&lt;pre>&lt;code>Max: 2147483646
Min: 1
1723848096
1013067795
1380077149
2133255643
1388105236
1769844091
973642840
189821740
&lt;/code>&lt;/pre>&lt;p>其他引擎可以参看参考手册https://devdocs.io/cpp/header/random&lt;/p>
&lt;h2 id="使用分布类">使用分布类&lt;/h2>
&lt;p>有时候我们可能对随机数有额外要求，比如取值范围，比如负数，比如浮点数……&lt;/p>
&lt;p>当然我们可以自己对引擎生成的随机数做额外处理，但更简单可靠的方法是使用STL的分布类&lt;/p>
&lt;h3 id="离散均匀分布">离散均匀分布&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;random&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">random_device&lt;/span> &lt;span class="n">rd&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">default_random_engine&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rd&lt;/span>&lt;span class="p">());&lt;/span>
&lt;span class="n">uniform_int_distribution&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span> &lt;span class="n">dist&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//返回值范围为[-5, 5]
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">dist&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34; &amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>输出：&lt;/p>
&lt;pre>&lt;code>5 -1 -1 3 5 -4 4 -5
&lt;/code>&lt;/pre>&lt;h3 id="连续均匀分布">连续均匀分布&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;random&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="n">random_device&lt;/span> &lt;span class="n">rd&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">default_random_engine&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rd&lt;/span>&lt;span class="p">());&lt;/span>
&lt;span class="c1">//返回值范围为[0, 214)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">uniform_real_distribution&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span> &lt;span class="n">dist&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">214.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">dist&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34; &amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>输出：&lt;/p>
&lt;pre>&lt;code>68.0202 10.1525 17.0463 142.749 40.447 57.8053 58.8224 153.853
&lt;/code>&lt;/pre>&lt;p>STL中还有正态分布，泊松分布等，我平常用的比较少不再赘述&lt;/p>
&lt;hr>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>《C++标准模板库编程实战》 [美] Ivor Horton&lt;/li>
&lt;li>&lt;a href="https://www.cnblogs.com/egmkang/archive/2012/09/06/2673253.html"target="_blank" rel="noopener noreferrer">博客园 - C++11带来的随机数生成器&lt;/a>
&lt;/li>
&lt;/ul></description></item><item><title>c++中++i和i++的区别</title><link>https://geekgo.tech/posts/the-difference-between-++i-and-i++-in-cpp/</link><pubDate>Sat, 06 Jun 2020 00:00:00 +0000</pubDate><guid>https://geekgo.tech/posts/the-difference-between-++i-and-i++-in-cpp/</guid><description>&lt;h2 id="1-计算顺序不同">1. 计算顺序不同&lt;/h2>
&lt;p>&lt;code>i++&lt;/code> 返回 &lt;code>i&lt;/code> 本身，然后将 &lt;code>i&lt;/code> 加一&lt;/p>
&lt;p>&lt;code>++i&lt;/code> 将 &lt;code>i&lt;/code> 加一，然后返回 &lt;code>i&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34; &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34; &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>output：&lt;/p>
&lt;pre>&lt;code>0 1
2 2
&lt;/code>&lt;/pre>&lt;h2 id="2-返回值性质不同">2. 返回值性质不同&lt;/h2>
&lt;p>&lt;code>i++&lt;/code> 返回右值，&lt;code>++i&lt;/code> 返回左值（&lt;a href="https://baike.baidu.com/item/%E5%B7%A6%E5%80%BC%E4%B8%8E%E5%8F%B3%E5%80%BC"target="_blank" rel="noopener noreferrer">百度百科关于左值和右值的词条&lt;/a>
）&lt;/p>
&lt;p>所以 &lt;code>i++ = 3&lt;/code> 编译器会报错， &lt;code>++i = 3&lt;/code> 则没有问题&lt;/p>
&lt;h2 id="3-运算符重载和效率差别">3. 运算符重载和效率差别&lt;/h2>
&lt;p>我们定义一个简单（简陋）的类，包含保存坐标x和y，并且重载前置和后置递增运算符&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="k">class&lt;/span> &lt;span class="nc">Coordinate&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">private&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="n">x_&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="n">y_&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">public&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="c1">//构造函数
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">explicit&lt;/span> &lt;span class="n">Coordinate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">x_&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">y_&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">){};&lt;/span>
&lt;span class="c1">//打印x和y
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">printXY&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">x_&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;,&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">y_&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">//重载前置递增
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">Coordinate&lt;/span> &lt;span class="k">operator&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">x_&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">y_&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">//重载后置递增
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">Coordinate&lt;/span> &lt;span class="k">operator&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">Coordinate&lt;/span> &lt;span class="n">old&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">x_&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">y_&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">old&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>对比前置和后置递增的实现，可以看到为了实现后置递增的语义，我们需要一个额外的变量（old）保存对象原本的值，也就是说对于 &lt;code>Coordinate&lt;/code> 类的一个对象 &lt;code>co&lt;/code> 来说，理论上 &lt;code>++co&lt;/code> 的效率要高于 &lt;code>co++&lt;/code> 。其实对于C++内置类型来说这一点也是一样的，但现代编译器都会做优化，因此对于整型 &lt;code>i&lt;/code> 来说 &lt;code>++i&lt;/code> 和 &lt;code>i++&lt;/code>效率上很可能没什么区别&lt;/p>
&lt;p>测试一下刚才写的类：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">argc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">argv&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">Coordinate&lt;/span> &lt;span class="n">co1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">co2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">co2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">co1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">co2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">printXY&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="n">co1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">printXY&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">co2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">co1&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="n">co2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">printXY&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="n">co1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">printXY&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>output：&lt;/p>
&lt;pre>&lt;code>1,1
1,1
1,1
2,2
&lt;/code>&lt;/pre>&lt;hr>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.zhihu.com/question/19811087/answer/80210083"target="_blank" rel="noopener noreferrer">在程序开发中，++i 与 i++的区别在哪里？ - 叶王的回答 - 知乎&lt;/a>
&lt;/li>
&lt;li>《C++ Primer （第5版）》&lt;/li>
&lt;/ul></description></item></channel></rss>